{"version":3,"sources":["../../src/tests/users.test.ts"],"sourcesContent":["import bcrypt from 'bcrypt';\nimport mongoose from 'mongoose';\nimport request from 'supertest';\nimport App from '@/app';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport UsersRoute from '@routes/users.route';\n\nafterAll(async () => {\n  await new Promise<void>(resolve => setTimeout(() => resolve(), 500));\n});\n\ndescribe('Testing Users', () => {\n  describe('[GET] /users', () => {\n    it('response fineAll Users', async () => {\n      const usersRoute = new UsersRoute();\n      const users = usersRoute.usersController.userService.users;\n\n      users.find = jest.fn().mockReturnValue([\n        {\n          _id: 'qpwoeiruty',\n          email: 'a@email.com',\n          password: await bcrypt.hash('q1w2e3r4!', 10),\n        },\n        {\n          _id: 'alskdjfhg',\n          email: 'b@email.com',\n          password: await bcrypt.hash('a1s2d3f4!', 10),\n        },\n        {\n          _id: 'zmxncbv',\n          email: 'c@email.com',\n          password: await bcrypt.hash('z1x2c3v4!', 10),\n        },\n      ]);\n\n      (mongoose as any).connect = jest.fn();\n      const app = new App([usersRoute]);\n      return request(app.getServer()).get(`${usersRoute.path}`).expect(200);\n    });\n  });\n\n  describe('[GET] /users/:id', () => {\n    it('response findOne User', async () => {\n      const userId = 'qpwoeiruty';\n\n      const usersRoute = new UsersRoute();\n      const users = usersRoute.usersController.userService.users;\n\n      users.findOne = jest.fn().mockReturnValue({\n        _id: 'qpwoeiruty',\n        email: 'a@email.com',\n        password: await bcrypt.hash('q1w2e3r4!', 10),\n      });\n\n      (mongoose as any).connect = jest.fn();\n      const app = new App([usersRoute]);\n      return request(app.getServer()).get(`${usersRoute.path}/${userId}`).expect(200);\n    });\n  });\n\n  describe('[POST] /users', () => {\n    it('response Create User', async () => {\n      const userData: CreateUserDto = {\n        email: 'test@email.com',\n        password: 'q1w2e3r4',\n      };\n\n      const usersRoute = new UsersRoute();\n      const users = usersRoute.usersController.userService.users;\n\n      users.findOne = jest.fn().mockReturnValue(null);\n      users.create = jest.fn().mockReturnValue({\n        _id: '60706478aad6c9ad19a31c84',\n        email: userData.email,\n        password: await bcrypt.hash(userData.password, 10),\n      });\n\n      (mongoose as any).connect = jest.fn();\n      const app = new App([usersRoute]);\n      return request(app.getServer()).post(`${usersRoute.path}`).send(userData).expect(201);\n    });\n  });\n\n  describe('[PUT] /users/:id', () => {\n    it('response Update User', async () => {\n      const userId = '60706478aad6c9ad19a31c84';\n      const userData: CreateUserDto = {\n        email: 'test@email.com',\n        password: 'q1w2e3r4',\n      };\n\n      const usersRoute = new UsersRoute();\n      const users = usersRoute.usersController.userService.users;\n\n      if (userData.email) {\n        users.findOne = jest.fn().mockReturnValue({\n          _id: userId,\n          email: userData.email,\n          password: await bcrypt.hash(userData.password, 10),\n        });\n      }\n\n      users.findByIdAndUpdate = jest.fn().mockReturnValue({\n        _id: userId,\n        email: userData.email,\n        password: await bcrypt.hash(userData.password, 10),\n      });\n\n      (mongoose as any).connect = jest.fn();\n      const app = new App([usersRoute]);\n      return request(app.getServer()).put(`${usersRoute.path}/${userId}`).send(userData);\n    });\n  });\n\n  describe('[DELETE] /users/:id', () => {\n    it('response Delete User', async () => {\n      const userId = '60706478aad6c9ad19a31c84';\n\n      const usersRoute = new UsersRoute();\n      const users = usersRoute.usersController.userService.users;\n\n      users.findByIdAndDelete = jest.fn().mockReturnValue({\n        _id: '60706478aad6c9ad19a31c84',\n        email: 'test@email.com',\n        password: await bcrypt.hash('q1w2e3r4!', 10),\n      });\n\n      (mongoose as any).connect = jest.fn();\n      const app = new App([usersRoute]);\n      return request(app.getServer()).delete(`${usersRoute.path}/${userId}`).expect(200);\n    });\n  });\n});\n"],"names":["afterAll","Promise","resolve","setTimeout","describe","it","usersRoute","UsersRoute","users","usersController","userService","find","jest","fn","mockReturnValue","_id","email","password","bcrypt","hash","mongoose","connect","app","App","request","getServer","get","path","expect","userId","findOne","userData","create","post","send","findByIdAndUpdate","put","findByIdAndDelete","delete"],"mappings":"AAAA;;;;+CAAmB,QAAQ;iDACN,UAAU;kDACX,WAAW;4CACf,QAAO;mDAEA,uBAAqB;;;;;;AAE5CA,QAAQ,CAAC,UAAY;IACnB,MAAM,IAAIC,OAAO,CAAOC,CAAAA,OAAO,GAAIC,UAAU,CAAC,IAAMD,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;CACtE,CAAC,CAAC;AAEHE,QAAQ,CAAC,eAAe,EAAE,IAAM;IAC9BA,QAAQ,CAAC,cAAc,EAAE,IAAM;QAC7BC,EAAE,CAAC,wBAAwB,EAAE,UAAY;YACvC,MAAMC,UAAU,GAAG,IAAIC,WAAU,QAAA,EAAE,AAAC;YACpC,MAAMC,KAAK,GAAGF,UAAU,CAACG,eAAe,CAACC,WAAW,CAACF,KAAK,AAAC;YAE3DA,KAAK,CAACG,IAAI,GAAGC,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;gBACrC;oBACEC,GAAG,EAAE,YAAY;oBACjBC,KAAK,EAAE,aAAa;oBACpBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;iBAC7C;gBACD;oBACEJ,GAAG,EAAE,WAAW;oBAChBC,KAAK,EAAE,aAAa;oBACpBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;iBAC7C;gBACD;oBACEJ,GAAG,EAAE,SAAS;oBACdC,KAAK,EAAE,aAAa;oBACpBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;iBAC7C;aACF,CAAC,CAAC;YAEFC,SAAQ,QAAA,CAASC,OAAO,GAAGT,IAAI,CAACC,EAAE,EAAE,CAAC;YACtC,MAAMS,GAAG,GAAG,IAAIC,IAAG,QAAA,CAAC;gBAACjB,UAAU;aAAC,CAAC,AAAC;YAClC,OAAOkB,IAAAA,UAAO,QAAA,EAACF,GAAG,CAACG,SAAS,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC,EAAEpB,UAAU,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC,GAAG,CAAC,CAAC;SACvE,CAAC,CAAC;KACJ,CAAC,CAAC;IAEHxB,QAAQ,CAAC,kBAAkB,EAAE,IAAM;QACjCC,EAAE,CAAC,uBAAuB,EAAE,UAAY;YACtC,MAAMwB,MAAM,GAAG,YAAY,AAAC;YAE5B,MAAMvB,UAAU,GAAG,IAAIC,WAAU,QAAA,EAAE,AAAC;YACpC,MAAMC,KAAK,GAAGF,UAAU,CAACG,eAAe,CAACC,WAAW,CAACF,KAAK,AAAC;YAE3DA,KAAK,CAACsB,OAAO,GAAGlB,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;gBACxCC,GAAG,EAAE,YAAY;gBACjBC,KAAK,EAAE,aAAa;gBACpBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;aAC7C,CAAC,CAAC;YAEFC,SAAQ,QAAA,CAASC,OAAO,GAAGT,IAAI,CAACC,EAAE,EAAE,CAAC;YACtC,MAAMS,GAAG,GAAG,IAAIC,IAAG,QAAA,CAAC;gBAACjB,UAAU;aAAC,CAAC,AAAC;YAClC,OAAOkB,IAAAA,UAAO,QAAA,EAACF,GAAG,CAACG,SAAS,EAAE,CAAC,CAACC,GAAG,CAAC,CAAC,EAAEpB,UAAU,CAACqB,IAAI,CAAC,CAAC,EAAEE,MAAM,CAAC,CAAC,CAAC,CAACD,MAAM,CAAC,GAAG,CAAC,CAAC;SACjF,CAAC,CAAC;KACJ,CAAC,CAAC;IAEHxB,QAAQ,CAAC,eAAe,EAAE,IAAM;QAC9BC,EAAE,CAAC,sBAAsB,EAAE,UAAY;YACrC,MAAM0B,QAAQ,GAAkB;gBAC9Bf,KAAK,EAAE,gBAAgB;gBACvBC,QAAQ,EAAE,UAAU;aACrB,AAAC;YAEF,MAAMX,UAAU,GAAG,IAAIC,WAAU,QAAA,EAAE,AAAC;YACpC,MAAMC,KAAK,GAAGF,UAAU,CAACG,eAAe,CAACC,WAAW,CAACF,KAAK,AAAC;YAE3DA,KAAK,CAACsB,OAAO,GAAGlB,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC,IAAI,CAAC,CAAC;YAChDN,KAAK,CAACwB,MAAM,GAAGpB,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;gBACvCC,GAAG,EAAE,0BAA0B;gBAC/BC,KAAK,EAAEe,QAAQ,CAACf,KAAK;gBACrBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAACY,QAAQ,CAACd,QAAQ,EAAE,EAAE,CAAC;aACnD,CAAC,CAAC;YAEFG,SAAQ,QAAA,CAASC,OAAO,GAAGT,IAAI,CAACC,EAAE,EAAE,CAAC;YACtC,MAAMS,GAAG,GAAG,IAAIC,IAAG,QAAA,CAAC;gBAACjB,UAAU;aAAC,CAAC,AAAC;YAClC,OAAOkB,IAAAA,UAAO,QAAA,EAACF,GAAG,CAACG,SAAS,EAAE,CAAC,CAACQ,IAAI,CAAC,CAAC,EAAE3B,UAAU,CAACqB,IAAI,CAAC,CAAC,CAAC,CAACO,IAAI,CAACH,QAAQ,CAAC,CAACH,MAAM,CAAC,GAAG,CAAC,CAAC;SACvF,CAAC,CAAC;KACJ,CAAC,CAAC;IAEHxB,QAAQ,CAAC,kBAAkB,EAAE,IAAM;QACjCC,EAAE,CAAC,sBAAsB,EAAE,UAAY;YACrC,MAAMwB,MAAM,GAAG,0BAA0B,AAAC;YAC1C,MAAME,QAAQ,GAAkB;gBAC9Bf,KAAK,EAAE,gBAAgB;gBACvBC,QAAQ,EAAE,UAAU;aACrB,AAAC;YAEF,MAAMX,UAAU,GAAG,IAAIC,WAAU,QAAA,EAAE,AAAC;YACpC,MAAMC,KAAK,GAAGF,UAAU,CAACG,eAAe,CAACC,WAAW,CAACF,KAAK,AAAC;YAE3D,IAAIuB,QAAQ,CAACf,KAAK,EAAE;gBAClBR,KAAK,CAACsB,OAAO,GAAGlB,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;oBACxCC,GAAG,EAAEc,MAAM;oBACXb,KAAK,EAAEe,QAAQ,CAACf,KAAK;oBACrBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAACY,QAAQ,CAACd,QAAQ,EAAE,EAAE,CAAC;iBACnD,CAAC,CAAC;aACJ;YAEDT,KAAK,CAAC2B,iBAAiB,GAAGvB,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;gBAClDC,GAAG,EAAEc,MAAM;gBACXb,KAAK,EAAEe,QAAQ,CAACf,KAAK;gBACrBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAACY,QAAQ,CAACd,QAAQ,EAAE,EAAE,CAAC;aACnD,CAAC,CAAC;YAEFG,SAAQ,QAAA,CAASC,OAAO,GAAGT,IAAI,CAACC,EAAE,EAAE,CAAC;YACtC,MAAMS,GAAG,GAAG,IAAIC,IAAG,QAAA,CAAC;gBAACjB,UAAU;aAAC,CAAC,AAAC;YAClC,OAAOkB,IAAAA,UAAO,QAAA,EAACF,GAAG,CAACG,SAAS,EAAE,CAAC,CAACW,GAAG,CAAC,CAAC,EAAE9B,UAAU,CAACqB,IAAI,CAAC,CAAC,EAAEE,MAAM,CAAC,CAAC,CAAC,CAACK,IAAI,CAACH,QAAQ,CAAC,CAAC;SACpF,CAAC,CAAC;KACJ,CAAC,CAAC;IAEH3B,QAAQ,CAAC,qBAAqB,EAAE,IAAM;QACpCC,EAAE,CAAC,sBAAsB,EAAE,UAAY;YACrC,MAAMwB,MAAM,GAAG,0BAA0B,AAAC;YAE1C,MAAMvB,UAAU,GAAG,IAAIC,WAAU,QAAA,EAAE,AAAC;YACpC,MAAMC,KAAK,GAAGF,UAAU,CAACG,eAAe,CAACC,WAAW,CAACF,KAAK,AAAC;YAE3DA,KAAK,CAAC6B,iBAAiB,GAAGzB,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;gBAClDC,GAAG,EAAE,0BAA0B;gBAC/BC,KAAK,EAAE,gBAAgB;gBACvBC,QAAQ,EAAE,MAAMC,OAAM,QAAA,CAACC,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC;aAC7C,CAAC,CAAC;YAEFC,SAAQ,QAAA,CAASC,OAAO,GAAGT,IAAI,CAACC,EAAE,EAAE,CAAC;YACtC,MAAMS,GAAG,GAAG,IAAIC,IAAG,QAAA,CAAC;gBAACjB,UAAU;aAAC,CAAC,AAAC;YAClC,OAAOkB,IAAAA,UAAO,QAAA,EAACF,GAAG,CAACG,SAAS,EAAE,CAAC,CAACa,MAAM,CAAC,CAAC,EAAEhC,UAAU,CAACqB,IAAI,CAAC,CAAC,EAAEE,MAAM,CAAC,CAAC,CAAC,CAACD,MAAM,CAAC,GAAG,CAAC,CAAC;SACpF,CAAC,CAAC;KACJ,CAAC,CAAC;CACJ,CAAC,CAAC"}