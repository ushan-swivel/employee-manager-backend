{"version":3,"sources":["../../src/services/auth.service.ts"],"sourcesContent":["import { hash, compare } from 'bcrypt';\nimport { sign } from 'jsonwebtoken';\nimport { SECRET_KEY } from '@config';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { DataStoredInToken, TokenData } from '@interfaces/auth.interface';\nimport { User } from '@interfaces/users.interface';\nimport userModel from '@models/users.model';\nimport { isEmpty } from '@utils/util';\n\nclass AuthService {\n  public users = userModel;\n\n  public async signup(userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\n\n    const findUser: User = await this.users.findOne({ email: userData.email });\n    if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n    const createUserData: User = await this.users.create({ ...userData, password: hashedPassword });\n\n    return createUserData;\n  }\n\n  public async login(userData: CreateUserDto): Promise<{ cookie: string; findUser: User }> {\n    if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\n\n    const findUser: User = await this.users.findOne({ email: userData.email });\n    if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\n\n    const isPasswordMatching: boolean = await compare(userData.password, findUser.password);\n    if (!isPasswordMatching) throw new HttpException(409, \"Password is not matching\");\n\n    const tokenData = this.createToken(findUser);\n    const cookie = this.createCookie(tokenData);\n\n    return { cookie, findUser };\n  }\n\n  public async logout(userData: User): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\n\n    const findUser: User = await this.users.findOne({ email: userData.email, password: userData.password });\n    if (!findUser) throw new HttpException(409, `This email ${userData.email} was not found`);\n\n    return findUser;\n  }\n\n  public createToken(user: User): TokenData {\n    const dataStoredInToken: DataStoredInToken = { _id: user._id };\n    const secretKey: string = SECRET_KEY;\n    const expiresIn: number = 60 * 60;\n\n    return { expiresIn, token: sign(dataStoredInToken, secretKey, { expiresIn }) };\n  }\n\n  public createCookie(tokenData: TokenData): string {\n    return `Authorization=${tokenData.token}; HttpOnly; Max-Age=${tokenData.expiresIn};`;\n  }\n}\n\nexport default AuthService;\n"],"names":["AuthService","signup","userData","isEmpty","HttpException","findUser","users","findOne","email","hashedPassword","hash","password","createUserData","create","login","isPasswordMatching","compare","tokenData","createToken","cookie","createCookie","logout","user","dataStoredInToken","_id","secretKey","SECRET_KEY","expiresIn","token","sign","userModel"],"mappings":"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"}